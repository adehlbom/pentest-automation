import tkinter as tk
from tkinter import Entry, Label, Button
import subprocess

def run_initial_tcp_scan():
    target_ip = ip_entry.get()
    subprocess.run(['bash', 'pentest-automation/initial-scanning/initial-tcp-scan.sh', target_ip])

def run_full_tcp_scan():
    target_ip = ip_entry.get()
    subprocess.run(['bash', 'pentest-automation/initial-scanning/full-tcp-scan.sh', target_ip])

def run_vuln_scan():
    target_ip = ip_entry.get()
    with open('pentest-automation/initial-scanning/ports.txt', 'r') as file:
        discovered_ports = file.read().strip()
    subprocess.run(['bash', 'pentest-automation/initial-scanning/vuln-scan.sh', target_ip, discovered_ports])

# ... rest of the code ...

def run_udp_scan():
    target_ip = ip_entry.get()
    subprocess.run(['bash', 'pentest-automation/initial-scanning/udp-scan.sh', target_ip])


# Create the main window
window = tk.Tk()
window.title("Pentesting Automation")

# Initial Scanning Phase
initial_scanning_label = Label(window, text="Initial Scanning Phase")
initial_scanning_label.pack()

ip_label = Label(window, text="Target IP:")
ip_label.pack()
ip_entry = Entry(window)
ip_entry.pack()

initial_tcp_scan_button = Button(window, text="Run Initial TCP Scan", command=run_initial_tcp_scan)
initial_tcp_scan_button.pack()

full_tcp_scan_button = Button(window, text="Run Full TCP Scan", command=run_full_tcp_scan)
full_tcp_scan_button.pack()

vuln_scan_button = Button(window, text="Run Vulnerability Scan", command=run_vuln_scan)
vuln_scan_button.config(command=run_vuln_scan)
vuln_scan_button.pack()
# Create a label and entry for manually entering ports
port_label = Label(window, text="Ports (comma separated):")
port_label.pack()
port_entry = Entry(window)
port_entry.pack()

udp_scan_button = Button(window, text="Run UDP Scan", command=run_udp_scan)
udp_scan_button.pack()

# Run the Tkinter event loop
window.mainloop()
